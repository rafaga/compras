"""
Provides abstraction layer to get consad's application data
"""
#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
# Autor: Rafael Amador GalvÃ¡n
# Fecha: 11/07/2022
from sqlalchemy import create_engine
from sqlalchemy.engine import URL
from consad.database_driver import DatabaseType

class ORMConnection():
    """
    CLass that manages database connection via ORM
    """
    __engine = None
    __base = None

    @property
    def engine(self):
        """ return the engine generated by ORM """
        return self.__engine

    @property
    def base(self):
        """ return the declarative base to create structure """
        return self.__base

    def __init__(self, config) -> None:
        url_object = None
        if config['DRIVER'] == DatabaseType.MARIADB:
            url_object = URL.create(
                'mariadb+mariadbconnector',
                username=config['USERNAME'],
                password=config['PASSWORD'],
                host=config['SERVER'],
                database=config['DATABASE'],
            )
        if config['DRIVER'] == DatabaseType.SQLITE:
            url_object = URL.create(
                'sqlite+pysqlite',
                database=str(config['DATABASE'].resolve()),
            )
        self.__engine = create_engine(url_object, future=True, echo=True)
